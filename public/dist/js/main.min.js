!(function () {
  let e = window,
    t = document.documentElement;
  if (
    (t.classList.remove("no-js"),
    t.classList.add("js"),
    document.body.classList.contains("has-animations"))
  ) {
    let a = (window.sr = ScrollReveal());
    a.reveal(".feature", {
      duration: 600,
      distance: "20px",
      easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
      origin: "right",
      interval: 100,
    }),
      a.reveal(".feature2", {
        duration: 3e3,
        distance: "20px",
        easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
        origin: "right",
        interval: 100,
      }),
      a.reveal(".featurerevealing", {
        duration: 600,
        distance: "20px",
        easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
        origin: "right",
        interval: 100,
      }),
      a.reveal(".featurerevealingleft", {
        duration: 600,
        distance: "20px",
        easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
        origin: "left",
        interval: 100,
      }),
      a.reveal(".imagerevealing", {
        duration: 1e3,
        distance: "20px",
        easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
        origin: "top",
        interval: 100,
      }),
      a.reveal(".media-canvas", {
        duration: 600,
        scale: ".95",
        easing: "cubic-bezier(0.5, -0.01, 0, 1.005)",
        viewFactor: 0.5,
      });
  }
  let i = document.querySelector(".device-mockup");
  function n() {
    i.classList.add("has-loaded");
  }
  i.complete ? n() : i.addEventListener("load", n);
  let s = document.querySelectorAll(".is-moving-object"),
    o = 0,
    r = 0,
    c = 0,
    l = 0,
    $ = 0,
    d = t.clientWidth,
    u = t.clientHeight,
    p = function (e) {
      let t = this;
      (t.parentNode = e),
        t.getCanvasSize(),
        window.addEventListener("resize", function () {
          t.getCanvasSize();
        }),
        (t.mouseX = 0),
        (t.mouseY = 0),
        window.addEventListener("mousemove", function (e) {
          (t.mouseX = e.clientX), (t.mouseY = e.clientY);
        }),
        t.randomise();
    };
  (p.prototype.getCanvasSize = function () {
    let e = this;
    (e.canvasWidth = e.parentNode.clientWidth),
      (e.canvasHeight = e.parentNode.clientHeight);
  }),
    (p.prototype.generateDecimalBetween = function (e, t) {
      return (Math.random() * (e - t) + t).toFixed(2);
    }),
    (p.prototype.update = function () {
      let e = this;
      (e.translateX = e.translateX - e.movementX),
        (e.translateY = e.translateY - e.movementY),
        (e.posX +=
          (e.mouseX / (e.staticity / e.magnetism) - e.posX) / e.smoothFactor),
        (e.posY +=
          (e.mouseY / (e.staticity / e.magnetism) - e.posY) / e.smoothFactor),
        (e.translateY + e.posY < 0 ||
          e.translateX + e.posX < 0 ||
          e.translateX + e.posX > e.canvasWidth) &&
          (e.randomise(), (e.translateY = e.canvasHeight));
    }),
    (p.prototype.randomise = function () {
      let e = this;
      (e.colors = ["248, 242, 237", "180, 180, 180", "255, 255, 255"]),
        (e.velocity = 30),
        (e.smoothFactor = 50),
        (e.staticity = 30),
        (e.magnetism = 0.1 + 4 * Math.random()),
        (e.color = e.colors[Math.floor(Math.random() * e.colors.length)]),
        (e.alpha = e.generateDecimalBetween(5, 10) / 10),
        (e.size = e.generateDecimalBetween(1, 4)),
        (e.posX = 0),
        (e.posY = 0),
        (e.movementX = e.generateDecimalBetween(-2, 2) / e.velocity),
        (e.movementY = e.generateDecimalBetween(1, 20) / e.velocity),
        (e.translateX = e.generateDecimalBetween(0, e.canvasWidth)),
        (e.translateY = e.generateDecimalBetween(0, e.canvasHeight));
    });
  let m = function (e) {
    let t = this;
    (t.canvas = document.getElementById("hero-particles")),
      (t.ctx = this.canvas.getContext("2d")),
      (t.dpr = window.devicePixelRatio);
  };
  (m.prototype.start = function () {
    let e = this;
    e.canvasSize(),
      window.addEventListener("resize", function () {
        e.canvasSize();
      }),
      (e.bubblesList = []),
      e.generateBubbles(),
      e.animate();
  }),
    (m.prototype.canvasSize = function () {
      let e = this;
      (e.container = e.canvas.parentNode),
        (e.w = e.container.offsetWidth),
        (e.h = e.container.offsetHeight),
        (e.wdpi = e.w * e.dpr),
        (e.hdpi = e.h * e.dpr),
        (e.canvas.width = e.wdpi),
        (e.canvas.height = e.hdpi),
        (e.canvas.style.width = e.w + "px"),
        (e.canvas.style.height = e.h + "px"),
        e.ctx.scale(e.dpr, e.dpr);
    }),
    (m.prototype.animate = function () {
      let e = this;
      e.ctx.clearRect(0, 0, e.canvas.clientWidth, e.canvas.clientHeight),
        e.bubblesList.forEach(function (t) {
          t.update(),
            e.ctx.translate(t.translateX, t.translateY),
            e.ctx.beginPath(),
            e.ctx.arc(t.posX, t.posY, t.size, 0, 2 * Math.PI),
            (e.ctx.fillStyle = "rgba(" + t.color + "," + t.alpha + ")"),
            e.ctx.fill(),
            e.ctx.setTransform(e.dpr, 0, 0, e.dpr, 0, 0);
        }),
        requestAnimationFrame(this.animate.bind(this));
    }),
    (m.prototype.addBubble = function (e) {
      return this.bubblesList.push(e);
    }),
    (m.prototype.generateBubbles = function () {
      for (let e = 0; e < this.bubbleDensity(); e++)
        this.addBubble(new p(this.canvas.parentNode));
    }),
    (m.prototype.bubbleDensity = function () {
      return 400;
    }),
    window.addEventListener("load", function () {
      let e = new m("hero-particles"),
        t = new m("footer-particles");
      e.start(), t.start();
    }),
    (window.requestAnimFrame =
      window.requestAnimationFrame ||
      window.webkitRequestAnimationFrame ||
      window.mozRequestAnimationFrame ||
      window.oRequestAnimationFrame ||
      window.msRequestAnimationFrame ||
      function (e) {
        window.setTimeout(e, 1e3 / 60);
      }),
    s &&
      e.addEventListener(
        "mousemove",
        (function e(t, a) {
          let i = null;
          return (...e) => {
            let a = Date.now();
            (!i || a - i >= 150) && ((i = a), t.apply(this, e));
          };
        })(function (t) {
          !(function t(a, i) {
            (o = a.pageX),
              (r = a.pageY),
              (c = e.scrollY),
              (l = d / 2 - o),
              ($ = u / 2 - (r - c));
            for (let n = 0; n < i.length; n++) {
              let s = i[n].getAttribute("data-translating-factor") || 20,
                p = i[n].getAttribute("data-rotating-factor") || 20,
                m = i[n].getAttribute("data-perspective") || 500,
                g = [];
              i[n].classList.contains("is-translating") &&
                g.push("translate(" + l / s + "px, " + $ / s + "px)"),
                i[n].classList.contains("is-rotating") &&
                  g.push(
                    "perspective(" +
                      m +
                      "px) rotateY(" +
                      -l / p +
                      "deg) rotateX(" +
                      $ / p +
                      "deg)"
                  ),
                (i[n].classList.contains("is-translating") ||
                  i[n].classList.contains("is-rotating")) &&
                  ((g = g.join(" ")),
                  (i[n].style.transform = g),
                  (i[n].style.transition = "transform 1s ease-out"),
                  (i[n].style.transformStyle = "preserve-3d"),
                  (i[n].style.backfaceVisibility = "hidden"));
            }
          })(t, s);
        }, 150)
      );
})();
